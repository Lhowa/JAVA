package instaClone;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.JScrollPane;
import javax.swing.JLabel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import java.awt.Font;
import java.awt.CardLayout;
import javax.swing.JMenuBar;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.SwingConstants;
import javax.swing.ScrollPaneConstants;
import javax.swing.JFileChooser;
import java.awt.GridLayout;
import javax.swing.JProgressBar;
import javax.swing.JTextField;

/**
 * Class InstaClone, this class contains the main method as
 * well as the GUI and Cards for each "Page".
 */
public class InstaClone extends JFrame {

	File fileToSave;
	String currentFilePathString;
	JLabel filePathLabel;
	int count = 0;
	private JPanel contentPane;
	public List <String> imagepaths = new ArrayList<>();
	JProgressBar progressBar;
	JButton uploadbutton;
	private JTextField captionTextField;
	String imageUploadCaption;
	public List <String> imageCaptions = new ArrayList<>();
	JScrollPane scrollPane;


	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					InstaClone frame = new InstaClone();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public InstaClone() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 400, 600);//Default Size
		
		/**
		 * Generates the menu bar, navigates to the
		 * three pages.
		 */
		menuBarMethod();
		contentPane.setLayout(new CardLayout(0, 0));
		
		JPanel homePanel = homePagePanelMethod();
		contentPane.add(homePanel, "p1");
		
		JPanel uploadPanel = uploadPagePanelMethod();
		contentPane.add(uploadPanel, "p2");
		
		JPanel liveFeedPanel = profilePagePanelMethod();
		contentPane.add(liveFeedPanel, "p3");
	}

	private JPanel profilePagePanelMethod() {
		JPanel profilePanel = new JPanel();
		profilePanel.setLayout(new BorderLayout(0, 0));
		
		/**
		 * TODO
		 * Add Profile image and name in the profileLabel
		 */
		JLabel profileLabel = new JLabel("Profile");
		profileLabel.setHorizontalAlignment(SwingConstants.CENTER);
		profilePanel.add(profileLabel, BorderLayout.NORTH);
		
		/**
		 * TODO
		 * Images to be added below in scrollPane in a three columns? forEachLoop through imagePaths arrayList?
		 */
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		profilePanel.add(scrollPane, BorderLayout.CENTER);
		return profilePanel;
	}
	
	/********************************************************************************* End Profile Page */
	private JPanel uploadPagePanelMethod() {
		JPanel uploadPanel = new JPanel();
		uploadPanel.setLayout(new GridLayout(0, 1, 0, 0));
		
		
		JLabel uploadLabel = new JLabel("Upload");
		uploadLabel.setHorizontalAlignment(SwingConstants.CENTER);
		uploadPanel.add(uploadLabel);
		
		filePathLabel = new JLabel("Select a file to upload");
		uploadPanel.add(filePathLabel);
		
		uploadbutton = new JButton("Upload...");
		uploadbutton.setEnabled(false);
		captionTextField = new JTextField();
		captionTextField.setEnabled(false);
		uploadbutton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				count++;
				//The below file path will need to be altered to the location of users image folder within the package.******************
				File newFile = new File("/Users/landonhowa/eclipse-workspace/TestInstaClone/src/images/image" + count + ".jpg");
				fileToSave.renameTo(newFile);
				imagepaths.add("/image/image" + count + ".jpg");//adds image path to array
				//System.out.println(imagepaths);
				imageUploadCaption = captionTextField.getText();//set variable to image caption
				//System.out.println(imageUploadCaption);
				imageCaptions.add(imageUploadCaption);//adds caption to array
				progressBar.setValue(100);
				captionTextField.setText("");

			}
		});
		

		
		JButton browseButton = new JButton("Browse...");
		browseButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "jpg", "png", "gif", "jpeg");
				JFileChooser fileChooser = new JFileChooser();
				fileChooser.setFileFilter(filter);
				if (fileChooser.showOpenDialog(contentPane) == JFileChooser.APPROVE_OPTION) {
				  fileToSave = fileChooser.getSelectedFile();
				  currentFilePathString = fileChooser.getSelectedFile().toString();
				  //System.out.println(currentFilePathString);
				  filePathLabel.setText("File to Upload: " + currentFilePathString);
				  uploadbutton.setEnabled(true);
				  captionTextField.setEnabled(true);
				}
			}
		});
		uploadPanel.add(browseButton);
		
		JLabel imageCaptionLabel = new JLabel("Place image caption below...");
		imageCaptionLabel.setHorizontalAlignment(SwingConstants.CENTER);
		uploadPanel.add(imageCaptionLabel);
		uploadPanel.add(captionTextField);
		captionTextField.setColumns(10);
		progressBar = new JProgressBar();
		uploadPanel.add(progressBar);
		uploadPanel.add(uploadbutton);
		return uploadPanel;
	}
	
	/********************************************************************************* End Upload Page */
	
	private JPanel homePagePanelMethod() {
		JPanel homePanel = new JPanel();
		homePanel.setLayout(new BorderLayout(0, 0));
		JLabel homeLabel = new JLabel("Home");
		homePanel.add(homeLabel, BorderLayout.NORTH);
		homeLabel.setHorizontalAlignment(SwingConstants.CENTER);
		/**
		 * TODO
		 * Images to be added below in scrollPane in a single column? forEachLoop through imagePaths arrayList?
		 * Padding between images will need to be added.
		 * On press of Refresh, the event handler should query the imagepath array, then create a new JLabel
		 * using the image path to set the background.
		 */
		
		JButton homeRefreshButton = new JButton("Refresh...");
		homeRefreshButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				for (String p : imagepaths) {
					//add a image and caption at the index
					JLabel testLabel = new JLabel("Test worked");
					testLabel.setHorizontalAlignment(SwingConstants.CENTER);
					scrollPane.setViewportView(testLabel);
				}
			}
		});
		homePanel.add(homeRefreshButton, BorderLayout.SOUTH);
		scrollPane = new JScrollPane();
		scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		homePanel.add(scrollPane, BorderLayout.CENTER);
		
		return homePanel;
	}
	
	/********************************************************************************* End HomePage */

	private void menuBarMethod() {
		JMenuBar menuBar = new JMenuBar();
		menuBar.setBorder(new EmptyBorder(10, 0, 10, 0));
		setJMenuBar(menuBar);
		
		/**
		 * Navigates to the Upload page.
		 */
		JButton uploadMenuButton = new JButton("Upload");
		uploadMenuButton.setBorder(new EmptyBorder(0, 20, 0, 60));
		uploadMenuButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				CardLayout c = (CardLayout)(contentPane.getLayout());
				c.show(contentPane, "p2");
			}
		});
		menuBar.add(uploadMenuButton);
		
		/**
		 * Navigates to the Home page.
		 */
		JButton homeMenuButton = new JButton("Home");
		homeMenuButton.setBorder(new EmptyBorder(0, 60, 0, 60));
		homeMenuButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				CardLayout c = (CardLayout)(contentPane.getLayout());
				c.show(contentPane, "p1");
			}
		});
		menuBar.add(homeMenuButton);
		
		/**
		 * Navigates to the Profile page.
		 */
		JButton profileMenuButton = new JButton("Profile");
		profileMenuButton.setBorder(new EmptyBorder(0, 60, 0, 20));
		profileMenuButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				CardLayout c = (CardLayout)(contentPane.getLayout());
				c.show(contentPane, "p3");
			}
		});
		menuBar.add(profileMenuButton);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
	}
}
